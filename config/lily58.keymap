/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp F1  &kp F2    &kp F3     &kp F4   &kp F5    &kp F6                            &kp F1     &kp F2     &kp F3   &kp F4  &kp F5  &kp F6
&kp N1  &kp APOS  &kp COMMA  &kp DOT  &kp P     &kp Y                             &kp F      &kp G      &kp C    &kp R   &kp L   &kp EQUAL
&kp Q   &kp A     &kp O      &kp E    &kp U     &kp I                             &kp D      &kp H      &kp T    &kp N   &kp S   &kp RBKT
&kp A   &kp SEMI  &kp Q      &kp J    &kp K     &kp X      &kp LALT    &kp SPACE  &kp B      &kp M      &kp W    &kp V   &kp Z   &kp BSPC
                             &kp TAB  &kp BSPC  &kp LSHFT  &to 1       &kp ENTER  &kp LCTRL  &kp COMMA  &kp DOT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_1 {
            bindings = <
&bt BT_CLR_ALL  &kp F2    &kp F3     &kp F4   &kp F5    &kp F6                            &kp F1     &kp MINUS  &kp F3   &kp EQUAL  &kp F5    &kp F6
&kp N1          &kp APOS  &kp COMMA  &kp DOT  &kp P     &kp Y                             &kp F      &kp N7     &kp N8   &kp N9     &kp FSLH  &kp BSLH
&kp Q           &kp A     &kp O      &kp E    &kp U     &kp I                             &kp D      &kp N4     &kp N5   &kp N6     &kp S     &kp RBKT
&kp A           &kp SEMI  &kp Q      &kp J    &kp K     &kp X      &kp LALT    &kp SPACE  &kp B      &kp N1     &kp N2   &kp N3     &kp Z     &kp BSPC
                                     &kp TAB  &kp BSPC  &kp LSHFT  &to 0       &kp ENTER  &kp LCTRL  &kp COMMA  &kp DOT
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
